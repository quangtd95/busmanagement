spring.thymeleaf.cache=false

# ===============================
# DATASOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "securitydemo"
spring.datasource.url=jdbc:postgresql://ec2-23-21-224-199.compute-1.amazonaws.com:5432/d8pqdbacpfp8ue

# MySQL username and password 
spring.datasource.username=qnrkdbcbrlrhie
spring.datasource.password=1d30ed6a30c0b9444c6fcdd917bb70758d9e3079dab95be1d56f02574a4aa080
SPRING_DATASOURCE_DIRVER-CLASS-NAME=org.postgresql.Driver
SPRING_JPA_HIBERNATE_DDL-AUTO=update
SPRING_JPA_DATABASE-PLATFORM=org.hibernate.dialect.PostgreSQLDialect
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.dbcp.test-while-idle=true
spring.datasource.dbcp.validation-query=SELECT 1

# ===============================
# JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect